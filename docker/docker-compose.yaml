services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka_net
  kafka:
    image: bitnami/kafka:3.4
    #container_name: kafka
    ports:
      - "9092:9092"
      - "19092:19092"
    networks:
      - kafka_net
    environment:
      # Settings for Kafka without Connect
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:19092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:19092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT

        # Settings for Kafka without Connect 2
#        - KAFKA_BROKER_ID=1
#        - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#        - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:19092
#        - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#        - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
#        - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
#        - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
#        - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      # Settings for Kafka with Connect
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://127.0.0.1:9093
#      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
#      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
#      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
    depends_on:
      - zookeeper
#  connect:
#    image: debezium/connect:2.4.0.Final
#    ports:
#      - 8083:8083
#      - 8778:8778
#    links:
#      - kafka
#      - db
#    environment:
#      - BOOTSTRAP_SERVERS=kafka:9092
#      - GROUP_ID=debezium-events
#      - CONFIG_STORAGE_TOPIC=debezium_configs
#      - OFFSET_STORAGE_TOPIC=debezium_offsets
#      - STATUS_STORAGE_TOPIC=debezium_statuses
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8090:8080
    networks:
      - kafka_net
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
#  debezium-ui:
#    image: debezium/debezium-ui:2.4
#    platform: linux/amd64
#    environment:
#      - KAFKA_CONNECT_URIS=http://connect:8083  # Pointing to Kafka Connect service
#    ports:
#      - 9091:8080
#    depends_on:
#      - connect
#  setup-debezium-connector:
#    image: curlimages/curl
#    depends_on:
#      - connect
#    links:
#      - connect
#    environment:
#      DEBEZIUM_CONFIG: |
#        {
#          "name": "mysql-connector",
#          "config": {
#            "connector.class": "io.debezium.connector.mysql.MySqlConnector",
#            "database.hostname": "localhost",
#            "database.port": "3307",
#            "database.user": "root",
#            "database.password": "admin",
#            "database.server.id": "1",
#            "topic.prefix": "order",
#            "database.include.list": "silverspin",
#            "schema.history.internal.kafka.bootstrap.servers": "localhost:9092",
#            "schema.history.internal.kafka.topic": "schemahistory.silverspin",
#            "include.schema.changes": "true"
#          }
#        }
#    command: >
#      sh -c "
#        sleep 10;
#        echo Waiting for Kafka Connect to start listening on connect:8083...;
#        while ! nc -z connect 8083;
#        do
#          sleep 1;
#        done;
#        echo Kafka Connect is up!;
#        echo $$DEBEZIUM_CONFIG > /tmp/debezium-connector-config.json
#        curl -X POST -H \"Content-Type: application/json\" --data @/tmp/debezium-connector-config.json http://connect:8083/connectors;
#      "
  mysql-db:
    image: mysql:8.0
    container_name: mysql8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 'admin'
      MYSQL_DATABASE: 'silverspin'
    ports:
      - "3307:3306"
    volumes:
      - type: volume
        source: mysql_data
        target: /var/lib/mysql
    networks:
      - app_network
  order-system:
    image: order-system
    container_name: order-system
    ports:
      - "8081:8081"
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3307/silverspin?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: admin
    depends_on:
      - mysql-db
    networks:
      - app_network
volumes:
  mysql_data:
    external: false
networks:
  kafka_net:
    driver: bridge
  app_network: